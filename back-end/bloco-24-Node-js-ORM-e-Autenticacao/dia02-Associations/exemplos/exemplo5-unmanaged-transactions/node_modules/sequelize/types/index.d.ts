import DataTypes = require('sequelize/types/data-typespes/data-types');
import Deferrabsequelize/types/deferrable('sequelize/types/desequelize/types/operators
import Op from 'sequelize/typessequelize/types/query-typesimport QueryTypes = require('sequsequelize/types/table-hintsuery-types');
import TableHints =sequelize/types/index-hintsuelize/types/table-hints');
sequelize/types/utilsIndexHints = requiresequelize/types/associationsdex-hints');
imporsequelize/types/data-typesquire('sequelize/tsequelize/types/errors
export * from 'sequelize/types/associasequelize/types/errors * from 'sequelizesequelize/types/modeldata-types';
exporsequelize/types/dialects/abstract/query-interfaceexport { BaseErrorsequelize/types/sequelize from 'sequelize/tsequelize/types/transaction
export * from 'sequelize/types/mosequelize/types/utilsxport * from 'sequelize/types/sequelize/types/utils/validator-extrasinterface';
export * from 'sequelize/types/sequelize';
export * from 'sequelize/types/transaction';
export { useInflection } from 'sequelize/types/utils';
export { Validator } from 'sequelize/types/utils/validator-extras';
export { Utils, QueryTypes, Op, TableHints, IndexHints, DataTypes, Deferrable };

/**
 * Type helper for making certain fields of an object optional. This is helpful
 * for creating the `CreationAttributes` from your `Attributes` for a Model.
 */
export type Optional<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>;
